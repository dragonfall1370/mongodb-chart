apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-mongo
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "mongodb-chart.name" . }}
    app.kubernetes.io/component: haproxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "mongodb-chart.name" . }}
      app.kubernetes.io/component: haproxy
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "mongodb-chart.name" . }}
        app.kubernetes.io/component: haproxy
    spec:
      containers:
        - name: haproxy
          image: gdragonfall1370/ha-proxy:latest
          imagePullPolicy: Always
          ports:
            - name: mongo
              containerPort: 27017
          env:
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                    name: mongo-mongodb-chart-auth
                    key: MONGODB_ROOT_USER
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                    name: mongo-mongodb-chart-auth
                    key: MONGODB_ROOT_PASSWORD
            - name: MONGO_AUTH_DB
              value: "admin"
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: haproxy-config
          configMap:
            name: haproxy-mongo-cm
            items:
              - key: haproxy.cfg
                path: haproxy.cfg